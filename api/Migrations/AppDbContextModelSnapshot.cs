// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PEACE.api.Data;

#nullable disable

namespace PeaceApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Alimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Carboidrato")
                        .HasColumnType("double precision");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Energia")
                        .HasColumnType("double precision");

                    b.Property<int>("Fonte")
                        .HasColumnType("integer");

                    b.Property<double>("Lipidio")
                        .HasColumnType("double precision");

                    b.Property<double>("Proteina")
                        .HasColumnType("double precision");

                    b.Property<double>("QuantidadeReferencia")
                        .HasColumnType("double precision");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Alimentos");
                });

            modelBuilder.Entity("Nutriente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlimentoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Subtipo")
                        .HasColumnType("integer");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Valor")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("AlimentoId");

                    b.ToTable("Nutriente");
                });

            modelBuilder.Entity("PEACE.api.Models.AcidosGraxosTaco", b =>
                {
                    b.Property<int>("NumeroAlimento")
                        .HasColumnType("integer");

                    b.Property<double?>("DezesseisUm")
                        .HasColumnType("double precision");

                    b.Property<double?>("DezesseisZero")
                        .HasColumnType("double precision");

                    b.Property<double?>("DezoitoDoisN6")
                        .HasColumnType("double precision");

                    b.Property<double?>("DezoitoDoisT")
                        .HasColumnType("double precision");

                    b.Property<double?>("DezoitoTresN3")
                        .HasColumnType("double precision");

                    b.Property<double?>("DezoitoUm")
                        .HasColumnType("double precision");

                    b.Property<double?>("DezoitoUmT")
                        .HasColumnType("double precision");

                    b.Property<double?>("DezoitoZero")
                        .HasColumnType("double precision");

                    b.Property<double?>("DozeZero")
                        .HasColumnType("double precision");

                    b.Property<double?>("Monoinsaturados")
                        .HasColumnType("double precision");

                    b.Property<double?>("Poliinsaturados")
                        .HasColumnType("double precision");

                    b.Property<double?>("QuatorzeUm")
                        .HasColumnType("double precision");

                    b.Property<double?>("QuatorzeZero")
                        .HasColumnType("double precision");

                    b.Property<double?>("Saturados")
                        .HasColumnType("double precision");

                    b.Property<double?>("VinteCincoCinco")
                        .HasColumnType("double precision");

                    b.Property<double?>("VinteDoisCinco")
                        .HasColumnType("double precision");

                    b.Property<double?>("VinteDoisSeis")
                        .HasColumnType("double precision");

                    b.Property<double?>("VinteDoisZero")
                        .HasColumnType("double precision");

                    b.Property<double?>("VinteQuatroCinco")
                        .HasColumnType("double precision");

                    b.Property<double?>("VinteQuatroZero")
                        .HasColumnType("double precision");

                    b.Property<double?>("VinteUm")
                        .HasColumnType("double precision");

                    b.Property<double?>("VinteZero")
                        .HasColumnType("double precision");

                    b.HasKey("NumeroAlimento");

                    b.ToTable("AcidosGraxosTaco");
                });

            modelBuilder.Entity("PEACE.api.Models.AminoacidosTaco", b =>
                {
                    b.Property<int>("NumeroAlimento")
                        .HasColumnType("integer");

                    b.Property<double?>("Alanina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Arginina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Aspartico")
                        .HasColumnType("double precision");

                    b.Property<double?>("Cistina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Fenilalanina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Glicina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Glutamico")
                        .HasColumnType("double precision");

                    b.Property<double?>("Histidina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Isoleucina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Leucina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Lisina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Metionina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Prolina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Serina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Tirosina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Treonina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Triptofano")
                        .HasColumnType("double precision");

                    b.Property<double?>("Valina")
                        .HasColumnType("double precision");

                    b.HasKey("NumeroAlimento");

                    b.ToTable("AminoacidosTaco");
                });

            modelBuilder.Entity("PEACE.api.Models.Anamnese", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Alergias")
                        .HasColumnType("text");

                    b.Property<string>("AtividadeFisicaFrequencia")
                        .HasColumnType("text");

                    b.Property<string>("AtividadeFisicaHorario")
                        .HasColumnType("text");

                    b.Property<string>("AtividadeFisicaTipo")
                        .HasColumnType("text");

                    b.Property<string>("AversoesAlimentares")
                        .HasColumnType("text");

                    b.Property<double?>("ConsumoAguaDiario")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FrequenciaIntestinal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("HistoricoFamiliar_DM")
                        .HasColumnType("boolean");

                    b.Property<bool>("HistoricoFamiliar_DoencaCardiaca")
                        .HasColumnType("boolean");

                    b.Property<bool>("HistoricoFamiliar_HAS")
                        .HasColumnType("boolean");

                    b.Property<bool>("HistoricoFamiliar_Hipercolesterolemia")
                        .HasColumnType("boolean");

                    b.Property<bool>("HistoricoPessoal_DM")
                        .HasColumnType("boolean");

                    b.Property<bool>("HistoricoPessoal_DoencaCardiaca")
                        .HasColumnType("boolean");

                    b.Property<bool>("HistoricoPessoal_HAS")
                        .HasColumnType("boolean");

                    b.Property<bool>("HistoricoPessoal_Hipercolesterolemia")
                        .HasColumnType("boolean");

                    b.Property<bool>("IntoleranciaLactose")
                        .HasColumnType("boolean");

                    b.Property<string>("Medicamentos")
                        .HasColumnType("text");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ocupacao")
                        .HasColumnType("text");

                    b.Property<int>("PacienteId")
                        .HasColumnType("integer");

                    b.Property<bool>("PraticaAtividadeFisica")
                        .HasColumnType("boolean");

                    b.Property<string>("Suplementos")
                        .HasColumnType("text");

                    b.Property<bool>("TemAlergiaAlimentar")
                        .HasColumnType("boolean");

                    b.Property<bool>("UsaMedicamento")
                        .HasColumnType("boolean");

                    b.Property<bool>("UsaSuplemento")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("Anamneses");
                });

            modelBuilder.Entity("PEACE.api.Models.AnotacaoRefeicaoHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EditadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RefeicaoId")
                        .HasColumnType("integer");

                    b.Property<string>("TextoAnterior")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RefeicaoId");

                    b.ToTable("AnotacoesRefeicaoHistorico");
                });

            modelBuilder.Entity("PEACE.api.Models.AvaliacaoAntropometrica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Altura")
                        .HasColumnType("double precision");

                    b.Property<double>("CircunferenciaCintura")
                        .HasColumnType("double precision");

                    b.Property<double>("CircunferenciaQuadril")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("DataAvaliacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FatorAtividade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("GEB")
                        .HasColumnType("double precision");

                    b.Property<double>("GET")
                        .HasColumnType("double precision");

                    b.Property<double>("IMC")
                        .HasColumnType("double precision");

                    b.Property<int>("Idade")
                        .HasColumnType("integer");

                    b.Property<double>("MassaGorda")
                        .HasColumnType("double precision");

                    b.Property<double>("MassaMagra")
                        .HasColumnType("double precision");

                    b.Property<int>("Metodo")
                        .HasColumnType("integer");

                    b.Property<int>("PacienteId")
                        .HasColumnType("integer");

                    b.Property<double>("PercentualGordura")
                        .HasColumnType("double precision");

                    b.Property<double>("Peso")
                        .HasColumnType("double precision");

                    b.Property<bool>("PesoEmLibras")
                        .HasColumnType("boolean");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("TMB")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("AvaliacoesAntropometricas");
                });

            modelBuilder.Entity("PEACE.api.Models.GastoEnergeticoHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Altura")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("DataCalculo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FatorAtividade")
                        .HasColumnType("integer");

                    b.Property<double>("GEB")
                        .HasColumnType("double precision");

                    b.Property<double>("GET")
                        .HasColumnType("double precision");

                    b.Property<int>("Idade")
                        .HasColumnType("integer");

                    b.Property<int>("PacienteId")
                        .HasColumnType("integer");

                    b.Property<double>("Peso")
                        .HasColumnType("double precision");

                    b.Property<string>("Protocolo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("GastoEnergeticoHistorico");
                });

            modelBuilder.Entity("PEACE.api.Models.ItemConsumido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlimentoId")
                        .HasColumnType("integer");

                    b.Property<double>("Quantidade")
                        .HasColumnType("double precision");

                    b.Property<double>("QuantidadeGramas")
                        .HasColumnType("double precision");

                    b.Property<int>("RefeicaoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AlimentoId");

                    b.HasIndex("RefeicaoId");

                    b.ToTable("ItensConsumidos");
                });

            modelBuilder.Entity("PEACE.api.Models.ItemPlano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlimentoId")
                        .HasColumnType("integer");

                    b.Property<double>("QuantidadeGramas")
                        .HasColumnType("double precision");

                    b.Property<int>("RefeicaoPlanoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AlimentoId");

                    b.HasIndex("RefeicaoPlanoId");

                    b.ToTable("ItensPlano");
                });

            modelBuilder.Entity("PEACE.api.Models.ItemPlanoAlimentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlimentoId")
                        .HasColumnType("integer");

                    b.Property<double>("Calorias")
                        .HasColumnType("double precision");

                    b.Property<double>("Carboidratos")
                        .HasColumnType("double precision");

                    b.Property<double>("Gorduras")
                        .HasColumnType("double precision");

                    b.Property<double>("Proteinas")
                        .HasColumnType("double precision");

                    b.Property<double>("QuantidadeGramas")
                        .HasColumnType("double precision");

                    b.Property<int>("RefeicaoPlanoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AlimentoId");

                    b.HasIndex("RefeicaoPlanoId");

                    b.ToTable("ItensPlanoAlimentar");
                });

            modelBuilder.Entity("PEACE.api.Models.LoginAttempt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FailedCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastAttempt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("LoginAttempts");
                });

            modelBuilder.Entity("PEACE.api.Models.Nutricionista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("Nutricionistas");
                });

            modelBuilder.Entity("PEACE.api.Models.NutrienteUSDA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlimentoUSDAId")
                        .HasColumnType("integer");

                    b.Property<string>("NomeOriginal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomePadronizado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Subtipo")
                        .HasColumnType("integer");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Valor")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("AlimentoUSDAId");

                    b.ToTable("NutrientesUSDA");
                });

            modelBuilder.Entity("PEACE.api.Models.PlanoAlimentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PacienteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("PlanosAlimentares");
                });

            modelBuilder.Entity("PEACE.api.Models.PregasCutaneas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AvaliacaoAntropometricaId")
                        .HasColumnType("integer");

                    b.Property<double?>("PCAB")
                        .HasColumnType("double precision");

                    b.Property<double?>("PCB")
                        .HasColumnType("double precision");

                    b.Property<double?>("PCCX")
                        .HasColumnType("double precision");

                    b.Property<double?>("PCP")
                        .HasColumnType("double precision");

                    b.Property<double?>("PCSA")
                        .HasColumnType("double precision");

                    b.Property<double?>("PCSE")
                        .HasColumnType("double precision");

                    b.Property<double?>("PCSI")
                        .HasColumnType("double precision");

                    b.Property<double?>("PCT")
                        .HasColumnType("double precision");

                    b.Property<double?>("PCTX")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoAntropometricaId")
                        .IsUnique();

                    b.ToTable("PregasCutaneas");
                });

            modelBuilder.Entity("PEACE.api.Models.RefeicaoPlano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan?>("Horario")
                        .HasColumnType("interval");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlanoAlimentarId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlanoAlimentarId");

                    b.ToTable("RefeicoesPlano");
                });

            modelBuilder.Entity("PEACE.api.Models.TabelaAlimentoUSDA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DescricaoIngles")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DescricaoTraduzida")
                        .HasColumnType("text");

                    b.Property<double>("QuantidadePadrao")
                        .HasColumnType("double precision");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AlimentosUSDA");
                });

            modelBuilder.Entity("PEACE.api.Models.TabelaTaco", b =>
                {
                    b.Property<int>("NumeroAlimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NumeroAlimento"));

                    b.Property<double?>("Calcio")
                        .HasColumnType("double precision");

                    b.Property<double?>("Carboidrato")
                        .HasColumnType("double precision");

                    b.Property<double?>("Cinzas")
                        .HasColumnType("double precision");

                    b.Property<double?>("Cobre")
                        .HasColumnType("double precision");

                    b.Property<double?>("Colesterol")
                        .HasColumnType("double precision");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("EnergiaKcal")
                        .HasColumnType("double precision");

                    b.Property<double?>("EnergiaKj")
                        .HasColumnType("double precision");

                    b.Property<double?>("Ferro")
                        .HasColumnType("double precision");

                    b.Property<double?>("FibraAlimentar")
                        .HasColumnType("double precision");

                    b.Property<double?>("Fosforo")
                        .HasColumnType("double precision");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<double?>("Lipideos")
                        .HasColumnType("double precision");

                    b.Property<double?>("Magnesio")
                        .HasColumnType("double precision");

                    b.Property<double?>("Manganes")
                        .HasColumnType("double precision");

                    b.Property<double?>("Niacina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Piridoxina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Potassio")
                        .HasColumnType("double precision");

                    b.Property<double?>("Proteina")
                        .HasColumnType("double precision");

                    b.Property<double?>("RAE")
                        .HasColumnType("double precision");

                    b.Property<double?>("RE")
                        .HasColumnType("double precision");

                    b.Property<double?>("Retinol")
                        .HasColumnType("double precision");

                    b.Property<double?>("Riboflavina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Sodio")
                        .HasColumnType("double precision");

                    b.Property<double?>("Tiamina")
                        .HasColumnType("double precision");

                    b.Property<double?>("Umidade")
                        .HasColumnType("double precision");

                    b.Property<double?>("VitaminaC")
                        .HasColumnType("double precision");

                    b.Property<double?>("Zinco")
                        .HasColumnType("double precision");

                    b.HasKey("NumeroAlimento");

                    b.ToTable("TabelaTaco");
                });

            modelBuilder.Entity("Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("NutricionistaId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.HasIndex("NutricionistaId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("Refeicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Anotacao")
                        .HasColumnType("text");

                    b.Property<DateTime?>("AnotacaoEditadaEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PacienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("Refeicoes");
                });

            modelBuilder.Entity("Nutriente", b =>
                {
                    b.HasOne("Alimento", "Alimento")
                        .WithMany("Nutrientes")
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimento");
                });

            modelBuilder.Entity("PEACE.api.Models.AcidosGraxosTaco", b =>
                {
                    b.HasOne("PEACE.api.Models.TabelaTaco", "TabelaTaco")
                        .WithOne("AcidosGraxos")
                        .HasForeignKey("PEACE.api.Models.AcidosGraxosTaco", "NumeroAlimento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TabelaTaco");
                });

            modelBuilder.Entity("PEACE.api.Models.AminoacidosTaco", b =>
                {
                    b.HasOne("PEACE.api.Models.TabelaTaco", "TabelaTaco")
                        .WithOne("Aminoacidos")
                        .HasForeignKey("PEACE.api.Models.AminoacidosTaco", "NumeroAlimento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TabelaTaco");
                });

            modelBuilder.Entity("PEACE.api.Models.Anamnese", b =>
                {
                    b.HasOne("Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("PEACE.api.Models.AnotacaoRefeicaoHistorico", b =>
                {
                    b.HasOne("Refeicao", "Refeicao")
                        .WithMany("HistoricoAnotacoes")
                        .HasForeignKey("RefeicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Refeicao");
                });

            modelBuilder.Entity("PEACE.api.Models.AvaliacaoAntropometrica", b =>
                {
                    b.HasOne("Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("PEACE.api.Models.GastoEnergeticoHistorico", b =>
                {
                    b.HasOne("Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("PEACE.api.Models.ItemConsumido", b =>
                {
                    b.HasOne("Alimento", "Alimento")
                        .WithMany()
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Refeicao", "Refeicao")
                        .WithMany("ItensConsumidos")
                        .HasForeignKey("RefeicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimento");

                    b.Navigation("Refeicao");
                });

            modelBuilder.Entity("PEACE.api.Models.ItemPlano", b =>
                {
                    b.HasOne("Alimento", "Alimento")
                        .WithMany()
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PEACE.api.Models.RefeicaoPlano", "Refeicao")
                        .WithMany("Itens")
                        .HasForeignKey("RefeicaoPlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimento");

                    b.Navigation("Refeicao");
                });

            modelBuilder.Entity("PEACE.api.Models.ItemPlanoAlimentar", b =>
                {
                    b.HasOne("Alimento", "Alimento")
                        .WithMany()
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PEACE.api.Models.RefeicaoPlano", "RefeicaoPlano")
                        .WithMany()
                        .HasForeignKey("RefeicaoPlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimento");

                    b.Navigation("RefeicaoPlano");
                });

            modelBuilder.Entity("PEACE.api.Models.NutrienteUSDA", b =>
                {
                    b.HasOne("PEACE.api.Models.TabelaAlimentoUSDA", "AlimentoUSDA")
                        .WithMany("Nutrientes")
                        .HasForeignKey("AlimentoUSDAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlimentoUSDA");
                });

            modelBuilder.Entity("PEACE.api.Models.PlanoAlimentar", b =>
                {
                    b.HasOne("Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("PEACE.api.Models.PregasCutaneas", b =>
                {
                    b.HasOne("PEACE.api.Models.AvaliacaoAntropometrica", "AvaliacaoAntropometrica")
                        .WithOne("PregasCutaneas")
                        .HasForeignKey("PEACE.api.Models.PregasCutaneas", "AvaliacaoAntropometricaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AvaliacaoAntropometrica");
                });

            modelBuilder.Entity("PEACE.api.Models.RefeicaoPlano", b =>
                {
                    b.HasOne("PEACE.api.Models.PlanoAlimentar", "PlanoAlimentar")
                        .WithMany("Refeicoes")
                        .HasForeignKey("PlanoAlimentarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanoAlimentar");
                });

            modelBuilder.Entity("Paciente", b =>
                {
                    b.HasOne("PEACE.api.Models.Nutricionista", "Nutricionista")
                        .WithMany("Pacientes")
                        .HasForeignKey("NutricionistaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Nutricionista");
                });

            modelBuilder.Entity("Refeicao", b =>
                {
                    b.HasOne("Paciente", "Paciente")
                        .WithMany("Refeicoes")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Alimento", b =>
                {
                    b.Navigation("Nutrientes");
                });

            modelBuilder.Entity("PEACE.api.Models.AvaliacaoAntropometrica", b =>
                {
                    b.Navigation("PregasCutaneas");
                });

            modelBuilder.Entity("PEACE.api.Models.Nutricionista", b =>
                {
                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("PEACE.api.Models.PlanoAlimentar", b =>
                {
                    b.Navigation("Refeicoes");
                });

            modelBuilder.Entity("PEACE.api.Models.RefeicaoPlano", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("PEACE.api.Models.TabelaAlimentoUSDA", b =>
                {
                    b.Navigation("Nutrientes");
                });

            modelBuilder.Entity("PEACE.api.Models.TabelaTaco", b =>
                {
                    b.Navigation("AcidosGraxos");

                    b.Navigation("Aminoacidos");
                });

            modelBuilder.Entity("Paciente", b =>
                {
                    b.Navigation("Refeicoes");
                });

            modelBuilder.Entity("Refeicao", b =>
                {
                    b.Navigation("HistoricoAnotacoes");

                    b.Navigation("ItensConsumidos");
                });
#pragma warning restore 612, 618
        }
    }
}
